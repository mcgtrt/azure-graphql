type Query {
  employee(id: String!): Employee!
  employees: [Employee!]!
}

type Mutation {
  createEmployee(params: CreateEmployeeParams!): Response!
  updateEmployee(params: UpdateEmployeeParams!): Response!
  deleteEmployee(id: ID!): Response!
}

type Employee {
  EmployeeID: ID!
  FirstName: String!
  LastName: String!
  Username: String!
  Email: String!
  DOB: String!
  Department: Department!
  Position: String!
}

type Department {
  DepartmentID: ID!
  Name: String!
}

input CreateEmployeeParams {
  FirstName: String!
  LastName: String!
  Username: String!
  Email: String!
  Password: String!
  DOB: String!
  DepartmentID: Int!
  Position: String!
}

# Excluded email and password as these should be handled
# in a separate request with dedicated model
input UpdateEmployeeParams {
  FirstName: String!
  LastName: String!
  Username: String!
  DOB: String!
  DepartmentID: Int!
  Position: String!
}

type Response {
  Status: Int!
  Msg: String!
}